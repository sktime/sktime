name: build-and-test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: " "
      - name: List changed files
        run: echo '${{ steps.file_changes.outputs.files}}'
      - uses: pre-commit/action@v2.0.0
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files}}

  run-notebook-examples:
    # needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[all_extras,binder]
      - name: Run example notebooks
        run: build_tools/run_examples.sh
        shell: bash

  run-tests:
    # needs: code-quality
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        # os: [ubuntu-20.04, windows-2019, macOS-10.15]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Check for missing init files
        run: build_tools/fail_on_missing_init_files.sh
        shell: bash
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install sktime and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[all_extras,dev]
      # - name: Build wheels
      #   uses: pypa/cibuildwheel@v2.2.2
      #   env:
      #     CIBW_BUILD: cp39-*
      #     CIBW_BEFORE_TEST: python -m pip install .[all_extras]
      #     CIBW_TEST_COMMAND: >
      #       mkdir -p testdir/ &&
      #       cp .coveragerc testdir/ &&
      #       cp setup.cfg testdir/ &&
      #       cd testdir/ &&
      #       pytest --showlocals --durations=10 --pyargs --cov-report=xml --cov=sktime sktime

      # - uses: actions/upload-artifact@v2
      #   with:
      #     path: ./wheelhouse/*.whl

      - name: Run tests
        run: |
          mkdir -p testdir/
          cp .coveragerc testdir/
          cp setup.cfg testdir/
          cd testdir/
          pytest --showlocals --durations=10 --pyargs --cov-report=xml -n 2 --cov=sktime sktime
      - name: Display coverage report
        run: ls -l ./testdir/
      - name: Publish code coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./testdir/coverage.xml
