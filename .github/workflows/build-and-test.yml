name: build-and-test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: " "
      - name: List changed files
        run: echo '${{ steps.file_changes.outputs.files}}'
      - uses: pre-commit/action@v2.0.0
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files}}
      - name: Check for missing init files
        run: build_tools/fail_on_missing_init_files.sh
        shell: bash

  run-notebook-examples:
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[all_extras,binder]
      - name: Run example notebooks
        run: build_tools/run_examples.sh
        shell: bash

  test-windows:
    needs: code-quality
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - uses: actions/checkout@v2
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge
      - run: conda --version
      - run: which python

      - name: Install sktime and dependencies (windows)
        run: |
          conda install -c anaconda libpython
          conda install -c conda-forge "pystan>=2.14,<3.0"
          conda install -c conda-forge "fbprophet>=0.7.1"
          conda install -c conda-forge scipy cython
          python -m pip install .[all_extras,dev]

      - name: Show dependecies
        run: python -m pip list

      - name: Run tests
        run: |
          mkdir -p testdir/
          cp .coveragerc testdir/
          cp setup.cfg testdir/
          cd testdir/
          pytest --showlocals --durations=10 --pyargs --cov-report=xml -n 2 --cov=sktime sktime
      - name: Display coverage report
        run: ls -l ./testdir/
      - name: Publish code coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./testdir/coverage.xml

  test-linux:
    needs: code-quality
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install sktime and dependencies
        run: |
          python -m pip install .[all_extras,dev]

      - name: Run tests
        run: |
          mkdir -p testdir/
          cp .coveragerc testdir/
          cp setup.cfg testdir/
          cd testdir/
          pytest --showlocals --durations=10 --pyargs --cov-report=xml -n 2 --cov=sktime sktime
      - name: Display coverage report
        run: ls -l ./testdir/
      - name: Publish code coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./testdir/coverage.xml

  test-mac:
    needs: code-quality
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-10.15]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - run: brew install libomp

      - name: Set env vars
        run: |
          echo "CC=/usr/bin/clang++" >> $GITHUB_ENV
          echo "CXX=/usr/bin/clang++" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=/usr/local/opt/libomp/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=$CPPFLAGS -Xclang -fopenmp -std=c++11 -lstdc++" >> $GITHUB_ENV
          echo "CFLAGS=$CFLAGS -I/opt/local/include/libomp -I/opt/local/include" >> $GITHUB_ENV
          echo "CXXFLAGS=$CXXFLAGS -I/opt/local/include/libomp" >> $GITHUB_ENV
          echo "LDFLAGS=$LDFLAGS -Wl,-rpath,/opt/local/lib/libomp -L/opt/local/lib/libomp -lomp" >> $GITHUB_ENV
          echo "PATH=/usr/local/opt/ccache/libexec:$PATH" >> $GITHUB_ENV

      - name: Install sktime and dependencies
        run: |
          python -m pip install .[all_extras,dev]

      - name: Run tests
        run: |
          mkdir -p testdir/
          cp .coveragerc testdir/
          cp setup.cfg testdir/
          cd testdir/
          pytest --showlocals --durations=10 --pyargs --cov-report=xml -n 2 --cov=sktime sktime
      - name: Display coverage report
        run: ls -l ./testdir/
      - name: Publish code coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./testdir/coverage.xml
