name: Build Wheels and Push to PyPI

on:
  # TODO: uncomment the release trigger
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # release:
  #   types: [published]


jobs:
  build_unix_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_SKIP: cp36-* pp* *-manylinux_i686 *-musllinux_i686 *-musllinux_x86_64
          CIBW_TEST_EXTRAS_LINUX: "all_extras,dev"
          CIBW_TEST_COMMAND_LINUX: pytest --showlocals --durations=20 -n 2 --pyargs sktime
          CIBW_TEST_EXTRAS_MACOS: "all_extras,dev"
          CIBW_TEST_COMMAND_MACOS: pytest --showlocals --durations=20 -n 2 --pyargs sktime
        run: bash build_tools/github/build_wheels.sh

      - name: Store wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  build_windows_wheels:
    name: Build wheels on windows-2019
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Fix windows paths
        run: echo "C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build wheels
        env:
          CIBW_BUILD_VERBOSITY: 2
          CIBW_PLATFORM: windows
          CIBW_SKIP: cp36-* pp* *-win32
          CIBW_BUILD_FRONTEND: "build"
          # Windows causes install problems due to fbprophet so it's tested separately
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Store wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  test-windows-wheels:
    needs: build_windows_wheels
    name: Test windows wheels
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          # Window 64 bit
          - os: windows-2019
            python: 37
            python-version: 3.7
            bitness: 64
            platform_id: win_amd64
          - os: windows-2019
            python: 38
            python-version: 3.8
            bitness: 64
            platform_id: win_amd64
          # - os: windows-2019
          #   python: 39
          #   python-version: 3.9
          #   bitness: 64
          #   platform_id: win_amd64

          # Window 32 bit
          # - os: windows-2019
          #   python: 37
          #   python-version: 3.7
          #   bitness: 32
          #   platform_id: win32
          # - os: windows-2019
          #   python: 38
          #   python-version: 3.8
          #   bitness: 32
          #   platform_id: win32
          # - os: windows-2019
          #   python: 39
          #   python-version: 3.9
          #   bitness: 32
          #   platform_id: win32

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: anaconda, conda-forge,

      - run: conda --version
      - run: which python

      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse

      - name: Display downloaded artifacts
        run: ls -l wheelhouse

      - name: Get wheel filename
        run: echo "WHEELNAME=$(ls ./wheelhouse/sktime*-cp${{ matrix.python }}*-${{ matrix.platform_id }}*.whl)" >> $env:GITHUB_ENV

      - name: Install conda libpython
        run: conda install -c anaconda libpython

      - name: Install conda dependencies
        run: |
          conda install -c anaconda "pystan==2.19.1.1"
          conda install -c conda-forge "fbprophet>=0.7.1"
          conda install -c conda-forge scipy cython

      - name: Install wheel and extras
        run: python -m pip install "${env:WHEELNAME}[all_extras,dev]"

      - name: Show pip packages
        run: python -m pip list

      - name: Show conda packages
        run: conda list

      - run: python -m platform

      - name: Run tests
        run: python -m pytest --showlocals --durations=10 --pyargs --cov-report=xml -n 2 --cov=sktime sktime


  # Build the source distribution under Linux
  build_sdist:
    name: Source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Build source distribution
        run: |
          python -m pip install build
          python -m build --sdist --outdir wheelhouse

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.tar.gz

      # - name: Publish package to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     user: ${{ secrets.PYPI_USERNAME }}
      #     password: ${{ secrets.PYPI_PASSWORD }}
      #     packages_dir: wheelhouse/
