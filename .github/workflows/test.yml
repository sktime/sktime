name: Install and test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: " "
      - name: List changed files
        run: echo '${{ steps.file_changes.outputs.files}}'
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files}}
      - name: Check for missing init files
        run: build_tools/fail_on_missing_init_files.sh
        shell: bash

  run-notebook-examples:
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[all_extras,binder,dev,mlflow]
      - name: Run example notebooks
        run: build_tools/run_examples.sh
        shell: bash

  test-nodevdeps:
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install sktime and dependencies
        run: |
          python -m pip install .

      - name: Run pytest-free tests
        run: |
          python sktime/_nopytest_tests.py

  test-nosoftdeps:
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install sktime and dependencies
        run: |
          python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: make PYTESTOPTIONS="--cov --cov-report=xml --timeout=600" test_softdeps

  test-nosoftdeps-full:
    needs: test-nosoftdeps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: git remote set-branches origin 'main'

      - run: git fetch --depth 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install sktime and dependencies
        run: |
          python -m pip install .[dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: make PYTESTOPTIONS="--cov --cov-report=xml --timeout=600" test_softdeps_full

  test-mlflow:
    needs: test-nosoftdeps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install sktime and dependencies
        run: |
          python -m pip install .[all_extras,dev,mlflow_tests] --no-cache-dir

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: make PYTESTOPTIONS="--cov --cov-report=xml --timeout=600" test_mlflow

  test-cython-estimators:
    needs: test-nosoftdeps
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install OS packages
        run: brew install libomp

      - name: Install sktime and dependencies
        run: |
          python -m pip install .[dev,cython_extras] --no-cache-dir

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        run: make PYTESTOPTIONS="--cov --cov-report=xml --only_cython_estimators=True --matrixdesign=False --timeout=600" test_check_suite

      - name: Publish code coverage
        uses: codecov/codecov-action@v3

  test-windows:
    needs: test-nosoftdeps
    runs-on: windows-latest
    strategy:
      fail-fast: false  # to not fail all combinations if just one fail
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3

      - run: git remote set-branches origin 'main'

      - run: git fetch --depth 1

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: anaconda, conda-forge,

      - run: conda --version
      - run: which python

      - name: Fix windows paths
        if: ${{ runner.os == 'Windows' }}
        run: echo "C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install conda libpython
        run: conda install -c anaconda libpython

      - name: Install sktime and dependencies
        run: python -m pip install .[all_extras_pandas2,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Show available branches
        run: git branch -a

      - name: Run tests
        run: |
          mkdir -p testdir/
          cp .coveragerc testdir/
          cp setup.cfg testdir/
          python -m pytest

      - name: Publish code coverage
        uses: codecov/codecov-action@v3

  test-unix:
    needs: test-nosoftdeps
    strategy:
      fail-fast: false  # to not fail all combinations if just one fail
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - run: git remote set-branches origin 'main'

      - run: git fetch --depth 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install sktime and dependencies
        run: |
          python -m pip install .[all_extras_pandas2,dev] --no-cache-dir

      - name: Show dependencies
        run: python -m pip list

      - name: Show available branches
        run: git branch -a

      - name: Run tests
        run: make test

      - name: Publish code coverage
        uses: codecov/codecov-action@v3

  test-unix-pandas1:
    needs: test-nosoftdeps
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: git remote set-branches origin 'main'

      - run: git fetch --depth 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install sktime and dependencies
        run: |
          python -m pip install .[all_extras,dev,pandas1] --no-cache-dir

      - name: Show dependencies
        run: python -m pip list

      - name: Show available branches
        run: git branch -a

      - name: Run tests
        run: make test

      - name: Publish code coverage
        uses: codecov/codecov-action@v3
