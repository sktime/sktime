name: datasets
on:
  schedule:
    - cron: 0 0 1 * *
  workflow_call:
  workflow_dispatch:
jobs:
  test_internal_data:
    name: onboard
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        operating-system:
          - macos-13
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.operating-system }}
    steps:
      - name: repository checkout step
        uses: actions/checkout@v4
      - name: update tracking reference step
        run: git remote set-branches origin main
        shell: bash
      - name: shallow clone update step
        run: git fetch --depth 1
        shell: bash
      - name: python environment step
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: dependencies installation step
        run: python3 -m pip install .[tests]
        shell: bash
      - name: unit test step
        run: python3 -m pytest -m "not datadownload" sktime/datasets
        shell: bash
      - name: upload coverage step
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.operating-system }},${{ matrix.python-version }},datasets
  test_external_data:
    name: downloads
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        operating-system:
          - macos-13
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.operating-system }}
    steps:
      - name: repository checkout step
        uses: actions/checkout@v4
      - name: update tracking reference step
        run: git remote set-branches origin main
        shell: bash
      - name: shallow clone update step
        run: git fetch --depth 1
        shell: bash
      - name: python environment step
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: dependencies installation step
        run: python3 -m pip install .[tests]
        shell: bash
      - name: unit test step
        run: python3 -m pytest -m "datadownload" sktime/datasets
        shell: bash
      - name: upload coverage step
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.operating-system }},${{ matrix.python-version }},datasets
