# author: Markus LÃ¶ning

# adapted from
# - https://iscinumpy.gitlab.io/post/azure-devops-python-wheels/
# - https://iscinumpy.gitlab.io/post/azure-devops-releases/

variables:
  REQUIREMENTS: build_tools/requirements.txt
  INCLUDED_VERSIONS: "cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39"

trigger:
  branches:
    include:
      - main
  tags:
    include:
      - '*'
pr:
  # Cancel if new commits are pushed to the same PR
  autoCancel: true

stages:
  - stage: 'code_quality'
    jobs:
      - job: 'linting'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            displayName: 'Use Python version'
            inputs:
              versionSpec: 3.7
          - script: pip install flake8
            displayName: 'Installing flake8'
          - task: Bash@3
            displayName: 'Linting'
            inputs:
              filePath: build_tools/linting.sh

  - stage: 'build'
    dependsOn: 'code_quality'
    condition: succeeded('code_quality')
    jobs:
      - job: 'check_soft_dependencies'
        timeoutInMinutes: 180
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: 3.7
          - script: pip install -r build_tools/hard_dependencies.txt
            displayName: 'Install hard dependencies'
          - script: pip install -e .
            displayName: 'Build sktime'
          - task: PythonScript@0
            displayName: 'Check soft dependencies'
            inputs:
              scriptSource: 'filePath'
              scriptPath: build_tools/azure/check_soft_dependencies.py
      - job: 'manylinux'
        timeoutInMinutes: 180
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: build_tools/azure/build_manylinux_wheels.yml
          - template: build_tools/azure/publish.yml
        strategy:
          matrix:
            64x2010: # 64 bit 2010
              PLATFORM: manylinux2010_x86_64
              IMAGE: quay.io/pypa/manylinux2010_x86_64
              PYTHON_ARCHITECTURE: x64
            64x2014: # 64 bit
              PLATFORM: manylinux2014_x86_64
              IMAGE: quay.io/pypa/manylinux2014_x86_64
              PYTHON_ARCHITECTURE: x86


  - stage: 'deploy'
    dependsOn: 'build'
    condition: and(succeeded('build'), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    jobs:
      - job: 'upload_to_pypi'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Collect wheels'
            inputs:
              source: 'current'
              tags: '^v[0-9]+\.[0-9]+\.[0-9]+'
              patterns: 'wheels_*/*manylinux*.whl'
              path: 'download/'
          - script: |
              mkdir dist
              cp download/wheels_*/*manylinux*.whl dist/
              ls -lh dist/
            displayName: 'Select and list wheels'
          - task: UsePythonVersion@0
            displayName: 'Use Python version'
            inputs:
              versionSpec: 3.x
          - script: |
              pip install --upgrade twine
            displayName: 'Install twine'
          - task: TwineAuthenticate@1
            displayName: 'Twine Authenticate'
            inputs:
              # configured in https://dev.azure.com/<user>/<project>/_settings/adminservices
              pythonUploadServiceConnection: PyPI
          - script: |
              python -m twine upload -r pypi --config-file $(PYPIRC_PATH) --non-interactive --skip-existing --verbose dist/*.whl
            displayName: 'Upload wheels to PyPI'
