[project]
name = "sktime"
version = "0.24.1"
description = "A unified framework for machine learning with time series"
readme = "README.md"
keywords = [
  "data-mining",
  "data-science",
  "forecasting",
  "machine-learning",
  "scikit-learn",
  "time-series",
  "time-series-analysis",
  "time-series-classification",
  "time-series-regression",
]
license = { file = "LICENSE" }
# sktime is governed by the Community Council, see docs/source/get_involved/governance
# use the email or sktime discord (governance channel) to get in touch
maintainers = [
  { name = "sktime developers", email = "sktime.toolbox@gmail.com" },
  { name = "Franz KirÃ¡ly" },
  { name = "Jonathan Bechtel" },
  { name = "Kiril Ralinovski" },
  { name = "Marc Rovira" },
  { name = "Sagar Mishra" },
  { name = "Ugochukwu Onyeka" },
]
# sktime has a large number of contributors,
# for full credits see contributors.md
authors = [
    { name = "sktime developers", email = "sktime.toolbox@gmail.com" },
]
requires-python = ">=3.8,<3.13"
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development",
]
# core dependencies of sktime
# this set should be kept minimal!
dependencies = [
  "numpy<1.27,>=1.21",  # required for framework layer and base class logic
  "packaging",  # for estimator specific dependency parsing
  "pandas<2.2.0,>=1.1",  # pandas is the main in-memory data container
  "scikit-base<0.7.0",  # base module for sklearn compatible base API
  "scikit-learn<1.4.0,>=0.24",  # required for estimators and framework layer
  "scipy<2.0.0,>=1.2",  # required for estimators and framework layer
]

[project.optional-dependencies]
# there are the following dependency sets:
# - all_extras_pandas2, all_extras - all soft dependencies
# - single-task soft dependencies, e.g., forecasting, classification, etc.
# - dev - the developer dependency set, for contributors to sktime
# - CI related, e.g., binder, docs, tests. Not for users of sktime.
#
# soft dependencies are not required for the core functionality of sktime
# but are required by popular estimators, e.g., prophet, tbats, etc.

# all soft dependencies
#
# users can install via "pip install sktime[all_extras]"
# or "pip install sktime[all_extras_pandas2]", to install only pandas 2 compatible deps
#
all_extras = [
  "arch<6.3.0,>=5.6",
  "cloudpickle",
  "dash!=2.9.0",
  "dask",
  "dtw-python",
  'esig==0.9.7; python_version < "3.10"',
  'filterpy>=1.4.5; python_version < "3.11"',
  "gluonts>=0.9",
  'h5py; python_version < "3.12"',
  'hmmlearn>=0.2.7; python_version < "3.11"',
  "holidays",
  'keras-self-attention; python_version < "3.11"',
  "kotsu>=0.3.1",
  "matplotlib>=3.3.2",
  "mne",
  'numba<0.59,>=0.53; python_version < "3.12"',
  'pmdarima!=1.8.1,<3.0.0,>=1.8; python_version < "3.12"',
  'prophet>=1.1; python_version < "3.12"',
  "pycatch22<0.4.4",
  "pykalman-bardo<0.10,>=0.9.7",
  'pyod>=0.8; python_version < "3.11"',
  "scikit-optimize",
  "scikit_posthocs>=0.6.5",
  "seaborn>=0.11",
  "seasonal",
  "skpro<2.2.0,>=2",
  'statsforecast<1.7.0,>=0.5.2; python_version < "3.12"',
  "statsmodels>=0.12.1",
  'stumpy>=1.5.1; python_version < "3.11"',
  'tbats>=1.1; python_version < "3.12"',
  'tensorflow; python_version < "3.12"',
  'tsfresh>=0.17; python_version < "3.12"',
  'tslearn<0.6.0,>=0.5.2; python_version < "3.11"',
  "xarray",
]
all_extras_pandas2 = [
  "arch<6.3.0,>=5.6",
  "cloudpickle",
  "dash!=2.9.0",
  "dask<2023.7.1",
  "dtw-python",
  'esig==0.9.7; python_version < "3.10"',
  'filterpy>=1.4.5; python_version < "3.11"',
  "gluonts>=0.9",
  'h5py; python_version < "3.12"',
  'hmmlearn>=0.2.7; python_version < "3.11"',
  "holidays",
  'keras-self-attention; python_version < "3.11"',
  "kotsu>=0.3.1",
  "matplotlib>=3.3.2",
  "mne",
  'numba<0.59,>=0.53; python_version < "3.12"',
  'pmdarima!=1.8.1,<3.0.0,>=1.8; python_version < "3.12"',
  'prophet>=1.1; python_version < "3.12"',
  "pycatch22<0.4.4",
  "pykalman-bardo<0.10,>=0.9.7",
  'pyod>=0.8; python_version < "3.11"',
  "scikit_posthocs>=0.6.5",
  "seaborn>=0.11",
  "seasonal",
  "skpro<2.2.0,>=2",
  'statsforecast<1.7.0,>=0.5.2; python_version < "3.12"',
  "statsmodels>=0.12.1",
  'stumpy>=1.5.1; python_version < "3.11"',
  'tbats>=1.1; python_version < "3.12"',
  'tensorflow; python_version < "3.12"',
  'tsfresh>=0.17; python_version < "3.12"',
  'tslearn<0.6.0,>=0.5.2; python_version < "3.11"',
  "xarray",
]

# single-task dependencies, e.g., forecasting, classification, etc.
# manually curated and intentionally smaller to avoid dependeny conflicts
# names are identical with the names of the modules and estimator type strings
# dependency sets are selected to cover the most popular estimators in each module
# (this is a subjective choice, and may change over time as the ecosystem evolves,
# removals are rare and always accompanied by a deprecation warning)
#
# users can install via "pip install sktime[forecasting,transformations]" etc
#
alignment = [
  "dtw-python<1.4,>=1.3",
  'numba<0.59,>=0.53; python_version < "3.12"',
]
annotation = [
  "hmmlearn<0.4,>=0.2.7",
  'numba<0.59,>=0.53; python_version < "3.12"',
  'pyod<1.2,>=0.8; python_version < "3.12"',
]
classification = [
  'esig<0.10,>=0.9.7; python_version < "3.11"',
  'numba<0.59,>=0.53; python_version < "3.12"',
  'tensorflow<=2.14,>=2; python_version < "3.12"',
  'tsfresh<0.21,>=0.17; python_version < "3.12"',
]
clustering = [
  'numba<0.59,>=0.53; python_version < "3.12"',
  'tslearn<0.6.3,>=0.5.2; python_version < "3.12"',
]
forecasting = [
  "arch<6.3,>=5.6",
  'pmdarima!=1.8.1,<2.1,>=1.8; python_version < "3.12"',
  "prophet<1.2,>=1.1",
  "skpro<2.2,>=2",
  'statsforecast<1.7,>=0.5.2; python_version < "3.12"',
  "statsmodels<0.15,>=0.12.1",
  'tbats<1.2,>=1.1; python_version < "3.12"',
]
networks = [
  "keras-self-attention<0.52,>=0.51",
  'tensorflow<=2.14,>=2; python_version < "3.12"',
]
param_est = [
  "seasonal<0.4,>=0.3.1",
  "statsmodels<0.15,>=0.12.1",
]
regression = [
  'numba<0.59,>=0.53; python_version < "3.12"',
  'tensorflow<=2.14,>=2; python_version < "3.12"',
]
transformations = [
  'esig<0.10,>=0.9.7; python_version < "3.11"',
  "filterpy<1.5,>=1.4.5",
  "holidays>=0.29,<0.36",
  "mne<1.6,>=1.5",
  'numba<0.59,>=0.53; python_version < "3.12"',
  "pycatch22<0.4.4,>=0.4",
  "pykalman-bardo<0.10,>=0.9.7",
  "statsmodels<0.15,>=0.12.1",
  'stumpy<1.13,>=1.5.1; python_version < "3.12"',
  'tsfresh<0.21,>=0.17; python_version < "3.12"',
]

# dev - the developer dependency set, for contributors to sktime
dev = [
  "backoff",
  "httpx",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest-randomly",
  "pytest-timeout",
  "pytest-xdist",
  "wheel",
]

# CI related soft dependency sets - not for users of sktime, only for developers
# docs and tests are standard dep sets for development use
# they are stable and subject to deprecation policies
# contributors should use the dev dependency set for contributing to sktime, see above
docs = [
  "jupyter",
  "myst-parser",
  "nbsphinx>=0.8.6",
  "numpydoc",
  "pydata-sphinx-theme",
  "Sphinx!=7.2.0,<8.0.0",
  "sphinx-copybutton",
  "sphinx-design<0.6.0",
  "sphinx-gallery<0.15.0",
  "sphinx-issues<4.0.0",
  "tabulate",
]
tests = [
  "pytest<7.5,>=7.4",
  "pytest-cov<4.2,>=4.1",
  "pytest-randomly<3.16,>=3.15",
  "pytest-timeout>=2.1,<2.3",
  "pytest-xdist<3.4,>=3.3",
]

# CI related soft dependency sets - not for users of sktime, only for developers
# these are for specual uses and may be changed or removed at any time
binder = [
  "jupyter",
  "pandas<2.0.0",
]
cython_extras = [
  "mrseql",
  'mrsqm; python_version < "3.11"',
  "numba<0.59",
]
dl = [
  'tensorflow<=2.14,>=2; python_version < "3.12"',
  'torch; python_version < "3.12"',
]
mlflow = [
  "mlflow",
]
mlflow_tests = [
  "boto3",
  "botocore",
  "mlflow",
  "moto",
]
pandas1 = [
  "pandas<2.0.0",
]

[project.urls]
"API Reference" = "https://www.sktime.net/en/stable/api_reference.html"
Documentation = "https://www.sktime.net"
Download = "https://pypi.org/project/sktime/#files"
Homepage = "https://www.sktime.net"
"Release Notes" = "https://www.sktime.net/en/stable/changelog.html"
Repository = "https://github.com/sktime/sktime"

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>61",
]

[tool.setuptools.package-data]
sktime = [
  "*.csv",
  "*.csv.gz",
  "*.arff",
  "*.arff.gz",
  "*.txt",
  "*.ts",
  "*.tsv",
]

[tool.setuptools.packages.find]
exclude = ["tests", "tests.*"]

[tool.nbqa.exclude]
black = "^docs/source/examples/"
flake8 = "^docs/source/examples/"
isort = "^docs/source/examples/"
