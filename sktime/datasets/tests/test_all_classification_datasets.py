"""Unit tests for all time series regressors."""

__author__ = ["mloning", "TonyBagnall", "fkiraly"]


from sktime.tests.test_all_estimators import BaseFixtureGenerator, QuickTester


class ClassificationDatasetFixtureGenerator(BaseFixtureGenerator):
    """Fixture generator for classifier tests.

    Fixtures parameterized
    ----------------------
    estimator_class: estimator inheriting from BaseObject
        ranges over estimator classes not excluded by EXCLUDE_ESTIMATORS, EXCLUDED_TESTS
    estimator_instance: instance of estimator inheriting from BaseObject
        ranges over estimator classes not excluded by EXCLUDE_ESTIMATORS, EXCLUDED_TESTS
        instances are generated by create_test_instance class method
    scenario: instance of TestScenario
        ranges over all scenarios returned by retrieve_scenarios
    """

    # note: this should be separate from TestAllRegressors
    #   additional fixtures, parameters, etc should be added here
    #   TestAllRegressors should contain the tests only

    estimator_type_filter = "classification_dataset"


class TestAllClassificationDatasets(ClassificationDatasetFixtureGenerator, QuickTester):
    """Module level tests for all sktime regressors."""

    def test_tag_n_classes(self, estimator_instance):
        n_classes = estimator_instance.get_tag("n_classes")
        y = estimator_instance.load("y")
        assert y.nunique() == n_classes
